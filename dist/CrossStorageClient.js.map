{
  "version": 3,
  "sources": ["../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../src/CrossStorageClient.ts"],
  "sourcesContent": ["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "import * as uuid from \"uuid\";\r\n\r\nexport class CrossStorageClient {\r\n\r\n  private _id:string;\r\n  private _frameId:string;\r\n  private _hub:Window | null;\r\n  private _origin:string;\r\n  private _connected:boolean;\r\n  private _closed:boolean;\r\n  private _count:number;\r\n  private _timeout:number;\r\n  private _requests:Map<string, any>;\r\n  private _connections:Array<any>;\r\n  private _listener:(this: Window, ev: MessageEvent<any>) => any;\r\n  private _promise:Promise<void>;\r\n\r\n  constructor(url:string, opts) {\r\n    opts = opts || {};\r\n  \r\n    this._id        = uuid.v4();\r\n    this._promise   = opts.promise || new Promise<void>((resolve, reject) => {});\r\n    this._frameId   = opts.frameId || 'CrossStorageClient-' + this._id;\r\n    this._origin    = this._getOrigin(url);\r\n    this._requests  = new Map<string, any>();\r\n    this._connections  = new Array<any>();\r\n    this._connected = false;\r\n    this._closed    = false;\r\n    this._count     = 0;\r\n    this._timeout   = opts.timeout || 5000;\r\n\r\n    this._installListener();\r\n  \r\n    var frame :HTMLIFrameElement | null = null;\r\n    if (opts.frameId) {\r\n      frame = document.getElementById(opts.frameId) as HTMLIFrameElement;\r\n    }\r\n  \r\n    // If using a passed iframe, poll the hub for a ready message\r\n    if (frame !== null) {\r\n      this._poll();\r\n    }\r\n  \r\n    // Create the frame if not found or specified\r\n    frame = frame || this._createFrame(url);\r\n    this._hub = frame.contentWindow;\r\n  }\r\n  \r\n  /**\r\n   * The styles to be applied to the generated iFrame. Defines a set of properties\r\n   * that hide the element by positioning it outside of the visible area, and\r\n   * by modifying its display.\r\n   *\r\n   * @member {Object}\r\n   */\r\n  private frameStyle:any = {\r\n    display:  'none',\r\n    position: 'absolute',\r\n    top:      '-999px',\r\n    left:     '-999px'\r\n  };\r\n  \r\n  /**\r\n   * Returns the origin of an url, with cross browser support. Accommodates\r\n   * the lack of location.origin in IE, as well as the discrepancies in the\r\n   * inclusion of the port when using the default port for a protocol, e.g.\r\n   * 443 over https. Defaults to the origin of window.location if passed a\r\n   * relative path.\r\n   *\r\n   * @param   {string} url The url to a cross storage hub\r\n   * @returns {string} The origin of the url\r\n   */\r\n  private _getOrigin(url:string): string {\r\n    var uri, protocol, origin;\r\n  \r\n    uri = document.createElement('a');\r\n    uri.href = url;\r\n  \r\n    if (!uri.host) {\r\n      uri = window.location;\r\n    }\r\n  \r\n    if (!uri.protocol || uri.protocol === ':') {\r\n      protocol = window.location.protocol;\r\n    } else {\r\n      protocol = uri.protocol;\r\n    }\r\n  \r\n    origin = protocol + '//' + uri.host;\r\n    origin = origin.replace(/:80$|:443$/, '');\r\n  \r\n    return origin;\r\n  };\r\n  \r\n  /**\r\n   * Returns a promise that is fulfilled when a connection has been established\r\n   * with the cross storage hub. Its use is required to avoid sending any\r\n   * requests prior to initialization being complete.\r\n   *\r\n   * @returns {Promise} A promise that is resolved on connect\r\n   */\r\n  public onConnect(): Promise<void> {\r\n    if (this._connected) {\r\n      return this._promise;\r\n    } else if (this._closed) {\r\n      throw new Error('CrossStorageClient has closed');\r\n    }\r\n  \r\n    // Queue connect requests for client re-use\r\n    if (!this._connections) {\r\n      this._connections = [];\r\n    }\r\n  \r\n    return new Promise<void>((resolve, reject) => {\r\n      var client:CrossStorageClient = this;\r\n\r\n      var timeout = setTimeout(function() {\r\n        reject(new Error('CrossStorageClient could not connect'));\r\n      }, client._timeout);\r\n  \r\n      this._connections.push(function(err) {\r\n        clearTimeout(timeout);\r\n        if (err) return reject(err);\r\n        resolve();\r\n      });\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * Sets a key to the specified value. Returns a promise that is fulfilled on\r\n   * success, or rejected if any errors setting the key occurred, or the request\r\n   * timed out.\r\n   *\r\n   * @param   {string}  key   The key to set\r\n   * @param   {*}       value The value to assign\r\n   * @returns {Promise} A promise that is settled on hub response or timeout\r\n   */\r\n  private set(key, value) : Promise<any> {\r\n    return this._request('set', {\r\n      key:   key,\r\n      value: value\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * Accepts one or more keys for which to retrieve their values. Returns a\r\n   * promise that is settled on hub response or timeout. On success, it is\r\n   * fulfilled with the value of the key if only passed a single argument.\r\n   * Otherwise it's resolved with an array of values. On failure, it is rejected\r\n   * with the corresponding error message.\r\n   *\r\n   * @param   {...string} key The key to retrieve\r\n   * @returns {Promise}   A promise that is settled on hub response or timeout\r\n   */\r\n  private async get(key: string) : Promise<any> {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    var result = await this._request('get', { keys: args });\r\n    return result;\r\n  };\r\n  \r\n  /**\r\n   * Accepts one or more keys for deletion. Returns a promise that is settled on\r\n   * hub response or timeout.\r\n   *\r\n   * @param   {...string} key The key to delete\r\n   * @returns {Promise}   A promise that is settled on hub response or timeout\r\n   */\r\n  private del() : Promise<void> {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    return this._request('del', {keys: args});\r\n  };\r\n  \r\n  /**\r\n   * Returns a promise that, when resolved, indicates that all localStorage\r\n   * data has been cleared.\r\n   *\r\n   * @returns {Promise} A promise that is settled on hub response or timeout\r\n   */\r\n  public async clear() : Promise<void>  {\r\n    return await this._request('clear');\r\n  };\r\n  \r\n  /**\r\n   * Returns a promise that, when resolved, passes an array of all keys\r\n   * currently in storage.\r\n   *\r\n   * @returns {Promise} A promise that is settled on hub response or timeout\r\n   */\r\n  public getKeys() : Promise<Array<string>> {\r\n    return this._request('getKeys');\r\n  };\r\n  \r\n  /**\r\n   * Deletes the iframe and sets the connected state to false. The client can\r\n   * no longer be used after being invoked.\r\n   */\r\n  public close() {\r\n    var frame = document.getElementById(this._frameId);\r\n    if (frame !== null && frame.parentNode !== null) {\r\n      frame.parentNode.removeChild(frame);\r\n    }\r\n  \r\n    window.removeEventListener('message', this._listener, false);\r\n  \r\n    this._connected = false;\r\n    this._closed = true;\r\n  };\r\n  \r\n  /**\r\n   * Installs the necessary listener for the window message event. When a message\r\n   * is received, the client's _connected status is changed to true, and the\r\n   * onConnect promise is fulfilled. Given a response message, the callback\r\n   * corresponding to its request is invoked. If response.error holds a truthy\r\n   * value, the promise associated with the original request is rejected with\r\n   * the error. Otherwise the promise is fulfilled and passed response.result.\r\n   *\r\n   * @private\r\n   */\r\n  private _installListener() {\r\n    this._listener = (message:any) => {\r\n      var client:CrossStorageClient = this;\r\n      var error:Error;\r\n      var i:number;\r\n      var origin:string;\r\n      var response:any;\r\n  \r\n      // Ignore invalid messages or those after the client has closed\r\n      if (client._closed || !message.data || typeof message.data !== 'string') {\r\n        return;\r\n      }\r\n  \r\n      // postMessage returns the string \"null\" as the origin for \"file://\"\r\n      origin = (message.origin === 'null') ? 'file://' : message.origin;\r\n  \r\n      // Ignore messages not from the correct origin\r\n      if (origin !== client._origin) return;\r\n  \r\n      // LocalStorage isn't available in the hub\r\n      if (message.data === 'cross-storage:unavailable') {\r\n        if (!client._closed) \r\n          client.close();\r\n\r\n        if (!client._connections) \r\n          return;\r\n  \r\n        error = new Error('Closing this. Could not access localStorage in hub.');\r\n        for (i = 0; i < client._connections.length; i++) {\r\n          client._connections[i](error);\r\n        }\r\n  \r\n        return;\r\n      }\r\n  \r\n      // Handle initial connection\r\n      if (message.data.indexOf('cross-storage:') !== -1 && !this._connected) {\r\n        client._connected = true;\r\n        if (!client._connections) \r\n          return;\r\n  \r\n        for (i = 0; i < this._connections.length; i++) {\r\n          client._connections[i](null);\r\n        }\r\n        \r\n        client._connections = new Array<any>();\r\n      }\r\n  \r\n      if (message.data === 'cross-storage:ready')\r\n        return;\r\n  \r\n      // All other messages\r\n      try {\r\n        response = JSON.parse(message.data);\r\n      } catch(e) {\r\n        return;\r\n      }\r\n  \r\n      if (!response.id) return;\r\n  \r\n      if (client._requests[response.id]) {\r\n        client._requests[response.id](response.error, response.result);\r\n      }\r\n    };\r\n  \r\n    window.addEventListener('message', this._listener, false);\r\n  }\r\n  \r\n  /**\r\n   * Invoked when a frame id was passed to the client, rather than allowing\r\n   * the client to create its own iframe. Polls the hub for a ready event to\r\n   * establish a connected state.\r\n   */\r\n  private _poll() {\r\n    var interval:number;\r\n    var targetOrigin:string;\r\n  \r\n    // postMessage requires that the target origin be set to \"*\" for \"file://\"\r\n    targetOrigin = (this._origin === 'file://') ? '*' : this._origin;\r\n  \r\n    interval = window.setInterval(function() {\r\n      if (this._connected) return clearInterval(interval);\r\n      if (!this._hub) return;\r\n  \r\n      this._hub.postMessage('cross-storage:poll', targetOrigin);\r\n    }, 1000);\r\n  }\r\n  \r\n  /**\r\n   * Creates a new iFrame containing the hub. Applies the necessary styles to\r\n   * hide the element from view, prior to adding it to the document body.\r\n   * Returns the created element.\r\n   *\r\n   * @private\r\n   *\r\n   * @param  {string}            url The url to the hub\r\n   * returns {HTMLIFrameElement} The iFrame element itself\r\n   */\r\n  private _createFrame(url):HTMLIFrameElement {\r\n    var frame:HTMLIFrameElement;\r\n    var key:string;\r\n  \r\n    frame = window.document.createElement('iframe');\r\n    frame.id = this._frameId;\r\n  \r\n    // Style the iframe\r\n    for (key in this.frameStyle) {\r\n      if (this.frameStyle.hasOwnProperty(key)) {\r\n        frame.style[key] = this.frameStyle[key];\r\n      }\r\n    }\r\n  \r\n    window.document.body.appendChild(frame);\r\n    frame.src = url;\r\n  \r\n    return frame;\r\n  }\r\n  \r\n  /**\r\n   * Sends a message containing the given method and params to the hub. Stores\r\n   * a callback in the this._requests object for later invocation on message, or\r\n   * deletion on timeout. Returns a promise that is settled in either instance.\r\n   *\r\n   * @private\r\n   *\r\n   * @param   {string}  method The method to invoke\r\n   * @param   {*}       params The arguments to pass\r\n   * @returns {Promise} A promise that is settled on hub response or timeout\r\n   */\r\n  private _request(method: string, params: any = {}) : Promise<any>\r\n  {\r\n    if (this._closed) {\r\n      throw new Error('CrossStorageClient has closed');\r\n    }\r\n\r\n    if (this._hub == null) {\r\n      throw new Error('CrossStorageClient is in disconnected state');\r\n    }\r\n\r\n    this._count++;\r\n\r\n    var req:any = {\r\n      id:     this._id + ':' + this._count,\r\n      method: 'cross-storage:' + method,\r\n      params: params\r\n    };\r\n\r\n    var promise = new Promise<any>((resolve, reject) => {\r\n      var timeout:number;\r\n      var targetOrigin:string;\r\n      var client:CrossStorageClient = this;\r\n\r\n      // Timeout if a response isn't received after 4s\r\n      timeout = setTimeout(function() {\r\n        if (!client._requests[req.id]) return;\r\n\r\n        client._requests.delete(req.id);\r\n        reject(new Error('Timeout: could not perform ' + req.method));\r\n      }, client._timeout);\r\n\r\n      // Add request callback\r\n      client._requests[req.id] = function(err, result) {\r\n        clearTimeout(timeout);\r\n        client._requests.delete(req.id);\r\n        if (err) return reject(new Error(err));\r\n        resolve(result);\r\n      };\r\n\r\n      // postMessage requires that the target origin be set to \"*\" for \"file://\"\r\n      targetOrigin = (client._origin === 'file://') ? '*' : this._origin;\r\n\r\n      // Send serialized message\r\n      client._hub?.postMessage(JSON.stringify(req), targetOrigin);\r\n    });\r\n\r\n    return promise;\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
